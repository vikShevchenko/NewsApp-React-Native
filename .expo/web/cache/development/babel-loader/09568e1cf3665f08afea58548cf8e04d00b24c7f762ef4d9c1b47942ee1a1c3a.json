{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { gStyle } from \"./styles/style\";\nimport * as Font from \"expo-font\";\nimport AppLoading from 'expo-app-loading';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar fonts = function fonts() {\n  return Font.loadAsync({\n    'mt-bold': require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n    'mt-light': require(\"./assets/fonts/Montserrat-Light.ttf\")\n  });\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    font = _useState2[0],\n    setFont = _useState2[1];\n  if (font) {\n    return _jsx(View, {\n      style: gStyle.main,\n      children: _jsx(Text, {\n        children: \"Hello!!!!\"\n      })\n    });\n  } else {\n    return _jsx(AppLoading, {\n      startAsync: fonts,\n      onFinish: function onFinish() {\n        return setFont(true);\n      }\n    });\n  }\n}","map":{"version":3,"names":["React","useState","gStyle","Font","AppLoading","jsx","_jsx","fonts","loadAsync","require","App","_useState","_useState2","_slicedToArray","font","setFont","View","style","main","children","Text","startAsync","onFinish"],"sources":["C:/Users/viksh/OneDrive/Рабочий стол/Native/NewsApp/App.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useState } from 'react';\nimport { gStyle } from './styles/style';\nimport * as Font from \"expo-font\"\nimport AppLoading from 'expo-app-loading';\n\nconst fonts = () => Font.loadAsync({\n  'mt-bold': require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n  'mt-light': require(\"./assets/fonts/Montserrat-Light.ttf\"),\n})\n\n\n\nexport default function App() {\n\n  const [font, setFont] = useState(false)\n\n  if (font) {\n    return (\n      <View style={gStyle.main}>\n        <Text>Hello!!!!</Text>\n      </View>\n    );\n  } else {\n    return (\n      <AppLoading startAsync={fonts} onFinish={() => setFont(true)} />\n    )\n  }\n}\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM;AACf,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1C,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA;EAAA,OAASJ,IAAI,CAACK,SAAS,CAAC;IACjC,SAAS,EAAEC,OAAO,qCAAqC,CAAC;IACxD,UAAU,EAAEA,OAAO,sCAAsC;EAC3D,CAAC,CAAC;AAAA;AAIF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAwBV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAIE,IAAI,EAAE;IACR,OACER,IAAA,CAACU,IAAI;MAACC,KAAK,EAAEf,MAAM,CAACgB,IAAK;MAAAC,QAAA,EACvBb,IAAA,CAACc,IAAI;QAAAD,QAAA,EAAC;MAAS,CAAM;IAAC,CAClB,CAAC;EAEX,CAAC,MAAM;IACL,OACEb,IAAA,CAACF,UAAU;MAACiB,UAAU,EAAEd,KAAM;MAACe,QAAQ,EAAE,SAAAA,SAAA;QAAA,OAAMP,OAAO,CAAC,IAAI,CAAC;MAAA;IAAC,CAAE,CAAC;EAEpE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}